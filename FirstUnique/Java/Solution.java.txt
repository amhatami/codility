//Time Complexity: O(N * log(N))
// you can also use imports, for example:
import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    Map<Integer, Node> map;
    Node head, tail;
    Set<Integer> used = new HashSet();


    public int solution(int[] A) {
        FirstUnique(A);
        return showFirstUnique();
    }
    public void FirstUnique(int[] nums) {        
        map = new HashMap<>();
        head = new Node(0);
        tail = new Node(0);
        head.next = tail;
        tail.prev = head;
        for(int num: nums) add(num);
    }
    
    public int showFirstUnique() {
        if(head.next == tail) return -1;
        else return head.next.val;
    }
    
    public void add(int value) {
        if(used.contains(value)) return;
        if(map.containsKey(value)){
            removeNodeFromMapAndList(value);
        }else{
            addElement(value);
        }
    }
    
    public void removeNodeFromMapAndList(int value){
        Node node = map.get(value);
        node.prev.next = node.next;
        node.next.prev = node.prev;
        map.remove(value);
        used.add(value);
    }
    
    public void addElement(int value){
        Node newNode = new Node(value);
        Node previous = tail.prev;
        newNode.next = tail;
        tail.prev = newNode;
        newNode.prev = previous;
        previous.next = newNode;
        map.put(value, newNode);
    }
    
    class Node{
        Node next=null, prev=null;
        int val;
        public Node(int val){
            this.val = val;
        }
    }
   
}
